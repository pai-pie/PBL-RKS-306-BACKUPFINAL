version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_API_URL=http://database:8000
      - SECRET_KEY=your-secret-key-here
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=guardiantix
      - MYSQL_PORT=3306
    depends_on:
      - database
    volumes:
      - .:/app
    networks:
      - app-network

  database:
    build:
      context: .
      dockerfile: Dockerfile.database
    ports:
      - "8000:8000"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=guardiantix
      - SECRET_KEY=your-secret-key-here
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: guardiantix
    ports:
      - "3307:3306"  # Changed to avoid conflict with local MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 20s
      retries: 10
      start_period: 30s
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge